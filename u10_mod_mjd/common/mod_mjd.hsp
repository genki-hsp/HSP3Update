;
;[ Infomation ]
; Name      : 修正ユリウス日換算モジュール
; SubName   : mod_mjd
; Version   : 1.00
; copyright : GENKI
;
;[ Update history ]
; yyyy/mm/dd : ver  : comment
; 2017/02/19 : 1.00 : 完成
;
;[ Comment ]
;通常の年月日（グレゴリオ暦）を修正ユリウス日（基準の日からの日数）に変換すると
;単純な整数値になるため、日数計算が容易になります。
;また時刻についても少数で表現されます。
;
;次の機能があります。
;・グレゴリオ暦と修正ユリウス日を相互に換算
;・修正ユリウス日から曜日、十二支、十干、干支紀日を算出。
;・現在日時を修正ユリウス日で取得。
;
;
;【解説】
;修正ユリウス日について
;ユリウス日では桁が多すぎて不便な場合に利用する目的で作られました。
;（作られた当時は、PCが扱える数字の桁数限界的な意味で不便だったようです。）
;近年付近の計算をする場合は桁が多すぎるので、修正ユリウス日を用いたほうがいいでしょう。
;1858年11月17日が修正ユリウス日の 0。
;
;ユリウス日について
;修正ユリウス日に 2400000.5 を加算すると、ユリウス日が算出できます。
;修正ユリウス日は0時が基準なのに対して、ユリウス日は正午が基準なので 0.5 が付きます。
;ユリウス日 0 は紀元前4700年ぐらい。近代を計算しようとすると桁がすごく大きくなります。
;
;グレゴリオ暦について
;1582年からユリウス暦の後に採用された暦です。
;今現在一般に使われているのがグレゴリオ暦です。
;本モジュールでは1582年以前もグレゴリオ暦で入出力します。
;


#ifndef __MOD_MJD__
#define global __MOD_MJD__

#module
;===================================================================================================
;hspmath.asより
#define ctype round(%1)         double(strf("%%0.0f", %1))      ; 四捨五入
#define ctype sgn(%1)           (((%1)>0) - ((%1)<0))           ; 符号
#define ctype intf(%1)          round((-0.5)*sgn(%1)+(%1))      ; 0の方向へ丸め
#define ctype floor(%1)         ((intf(%1)-((%1)<intf(%1))))    ; 負の方向へ丸め（実数）
#define ctype floori(%1)        int(strf("%%0.0f",floor(%1)))    ; 負の方向へ丸め（整数）

;乗除（最小非負剰余）
;負数を用いた乗除のとき、Ruby、Python、Common Lispなどと同じ計算結果になる。
#define ctype mod(%1,%2) (((%1)-(int((%1)/(%2))-1)*(%2)) \ (%2))

;-----------------------------------------------------------
;
;	定数の定義
;
;-----------------------------------------------------------
;#const global KAZU 100+50
;#enum  global KAZU_A = 0
;#enum  global KAZU_B
;#enum  global KAZU_C



;-----------------------------------------------------------
;
;	グレゴリオ暦を修正ユリウス日へ換算
;
;[ Infomation ]
;	val = ConvertG2MJD( Year, Month, Day )
;	int Year  : 年
;	int Month : 月
;	int Day   : 日
;	val : 修正ユリウス日
;
;[ comment ]
;グレゴリオ暦（現在使われている普通の太陽暦）を修正ユリウス日（MJD）に変換します。
;
;Year
;年を整数値で指定してくだい。
;西暦2017年の場合は、2017を指定します。
;紀元前100年の場合は、-99（=1-100）を指定します。
;
;Month
;月を1〜12の整数値で指定してください。
;
;Day
;日を1〜31の整数値で指定してください。
;
;戻り値
;修正ユリウス日を整数値で返します。
;
;参考資料：
;https://ob81496.jimdo.com/%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA/%E5%8D%A0%E8%A1%93%E7%90%86%E8%AB%96%E5%82%99%E5%BF%98%E9%8C%B2/%E6%9A%A6%E6%B3%95%EF%BC%91-%E4%BF%AE%E6%AD%A3%E3%83%A6%E3%83%AA%E3%82%A6%E3%82%B9%E9%80%9A%E6%97%A5/
;
;-----------------------------------------------------------
#defcfunc ConvertG2MJD int p_Year, int p_Month, int p_Day
	;変換：(year,month,day)→(y,m,d)
	;y 2014年1,2,3月⇒2013年13,14月,2014年3月
	;m 1,2,3〜12月⇒13,14,3〜12
	;d 日
	m = mod(p_Month-3,12) + 3
	d = p_Day
	y = double( p_Year + floori((-3.0+p_Month)/12.0) )
	
	;	修正ユリウス日を計算
	;フリーゲルの公式
	;MJD = [365.25y] + [y/400] ｰ [y/100] + [30.59(m-2)] + d - 678912
	;※[x]は床関数。
	MJD = int(strf("%0.0f", floor(365.25*y) + floor(y/400.0) - floor(y/100.0) + floor(30.59*(m-2)) + d - 678912 ))

	return MJD


;-----------------------------------------------------------
;
;	時刻を修正ユリウス日へ換算
;
;[ Infomation ]
;	val = ConvertTime2MJD( Hour, Min, Sec )
;	int/double Hour : 時
;	int/double Min  : 分
;	int/double Sec  : 秒
;	val      : 修正ユリウス日時刻
;
;[ comment ]
;時刻（hh:mm:ss.ss）を修正ユリウス日の時刻へ換算します。
;結果は実数で返されます。ConvertG2MJD関数での換算結果に足し算して利用してください。
;
;計算結果の例：
;0.00000  0時00分00秒
;0.00001  0時00分01秒
;0.37500  9時00分00秒
;0.79167 19時00分00秒
;1.00000 24時00分00秒
;
;内部では次のような計算をしています。
;Hour/24 + Min/(60*24) + Sec/(60*60*24)
;
;【使用例】10時09分08秒
;mes strf("%0.5f", ConvertTime2MJD(10, 9, 8))
;
;出力結果は「0.42301」
;
;-----------------------------------------------------------
#define global ctype ConvertTime2MJD(%1,%2,%3) (double(%1)/24.0 + double(%2)/1440.0 + double(%3)/86400.0)
;60*24 = 1440
;60*60*24 = 86400


;-----------------------------------------------------------
;
;	修正ユリウス日を時刻へ換算
;
;[ Infomation ]
;	ConvertMJD2Time mjdtime, Hour, Min, Sec
;	double mjdtie : 修正ユリウス日時刻
;	var Hour      : 時
;	var Min       : 分
;	var Sec       : 秒
;
;[ comment ]
;修正ユリウス日の時刻（小数点以下の部分）を時刻（hh:mm:ss.ss）に換算します。
;
;mjdtime
;修正ユリウス日の小数部分を取り出して指定してください。
;またはConvertTime2MJD関数の値を指定してください。
;
;-----------------------------------------------------------
#deffunc ConvertMJD2Time double p_mjdtime, var v_Hour, var v_Min, var v_Sec
	
	t = double(p_mjdtime)
	v_Hour = int(t * 24.0)
	
	t-= double(v_Hour)/24.0
	v_Min  = int(t * 1440.0)	;60*24 = 1440
	
	t-= double(v_Min)/1440.0
	v_Sec  = (t * 86400.0)	;60*60*24 = 86400
	return



;-----------------------------------------------------------
;
;	修正ユリウス日からグレゴリオ暦へ換算
;
;[ Infomation ]
;	ConvertMJD2G mjd, Year, Month, Day
;	int mjd   : 修正ユリウス日
;	var Year  : 年
;	var Month : 月
;	var Day   : 日
;
;[ comment ]
;修正ユリウス日（MJD）をグレゴリオ暦（現在使われている普通の太陽暦）に変換します。
;
;修正ユリウス日　→　グレゴリオ暦
;https://ja.wikipedia.org/wiki/%E3%83%A6%E3%83%AA%E3%82%A6%E3%82%B9%E9%80%9A%E6%97%A5#.E3.82.B0.E3.83.AC.E3.82.B4.E3.83.AA.E3.82.AA.E6.9A.A6.E3.81.8B.E3.82.89.E3.81.AE.E6.8F.9B.E7.AE.97.E5.BC.8F
;
;-----------------------------------------------------------
#deffunc ConvertMJD2G int p_mjd, var v_Year, var v_Month, var v_Day
	n = p_mjd + 678881
	a = 4*n + 3 + 4 * floori(3.0/4.0 * (floor(4.0*(n+1.0)/146097.0) + 1.0))
	b = 5 * floori(double(mod(a, 1461))/4.0) + 2
	
	yy = floori(double(a)/1461.0)
	mm = floori(double(b)/153.0)
	dd = floori(double(mod(b, 153))/5.0)
	
	v_Day   = dd + 1
	v_Month = (mm+2)\12+1
	v_Year  = yy - floori((-3.0+v_Month)/12.0)
	return


;-----------------------------------------------------------
;
;	修正ユリウス日から曜日を取得
;
;[ Infomation ]
;	val = MJD2Weekday( mjd )
;	int mjd : 修正ユリウス日
;	val     : 曜日（0〜6）
;
;[ comment ]
;修正ユリウス日から曜日を取得します。
;
;結果は0〜6の数値で返されます。数値の対応は次の通り。
;      0  1  2  3  4  5  6
;曜日 日 月 火 水 木 金 土
;
;【例】2012/1/1（日曜日）の場合
;曜日 = "日", "月", "火", "水", "木", "金", "土"
;mes 曜日( MJD2Weekday(ConvertG2MJD(2012,1,1)) )
;
;-----------------------------------------------------------
#define global ctype MJD2Weekday(%1) (((%1)+3) \ 7)


;-----------------------------------------------------------
;
;	修正ユリウス日から十二支を取得
;
;[ Infomation ]
;	val = MJD2Jyunishi( mjd )
;	int mjd : 修正ユリウス日
;	val     : 十二支（0〜11）
;
;[ comment ]
;修正ユリウス日から十二支を取得します。
;
;結果は0〜11の数値で返されます。数値の対応は次の通り。
;  0  1  2  3  4  5  6  7  8  9 10 11
; 子 丑 寅 卯 辰 巳 午 未 申 酉 戌 亥
;
;【例】2012/1/1（酉）の場合
;十二支 = "子", "丑", "寅", "卯", "辰", "巳", "午", "未", "申", "酉", "戌", "亥"
;mes 十二支( MJD2Jyunishi(ConvertG2MJD(2012,1,1)) )
;
;-----------------------------------------------------------
#define global ctype MJD2Jyunishi(%1) (((%1)+2) \ 12)


;-----------------------------------------------------------
;
;	修正ユリウス日から十干を取得
;
;[ Infomation ]
;	val = MJD2Jikkan( mjd )
;	int mjd : 修正ユリウス日
;	val     : 十干（0〜9）
;
;[ comment ]
;修正ユリウス日から十干を取得します。
;
;結果は0〜9の数値で返されます。数値の対応は次の通り。
;  0  1  2  3  4  5  6  7  8  9
; 甲 乙 丙 丁 戊 己 庚 辛 壬 癸
;
;【例】2012/1/1（辛）の場合
;十干 = "甲", "乙", "丙", "丁", "戊", "己", "庚", "辛", "壬", "癸"
;mes 十干( MJD2Jikkan(ConvertG2MJD(2012,1,1)) )
;
;-----------------------------------------------------------
#define global ctype MJD2Jikkan(%1) ((%1) \ 10)



;-----------------------------------------------------------
;
;	修正ユリウス日から干支紀日を取得
;
;[ Infomation ]
;	val = MJD2Kanshi( mjd )
;	int mjd : 修正ユリウス日
;	val     : 干支紀日（0〜59）
;
;[ comment ]
;修正ユリウス日から干支紀日を取得します。
;
;結果は0〜59の数値で返されます。数値の対応は次の通り。
;    0    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19
; 甲子 乙丑 丙寅 丁卯 戊辰 己巳 庚午 辛未 壬申 癸酉 甲戌 乙亥 丙子 丁丑 戊寅 己卯 庚辰 辛巳 壬午 癸未
; 
;   20   21   22   23   24   25   26   27   28   29   30   31   32   33   34   35   36   37   38   39
; 甲申 乙酉 丙戌 丁亥 戊子 己丑 庚寅 辛卯 壬辰 癸巳 甲午 乙未 丙申 丁酉 戊戌 己亥 庚子 辛丑 壬寅 癸卯
; 
;   40   41   42   43   44   45   46   47   48   49   50   51   52   53   54   55   56   57   58   59
; 甲辰 乙巳 丙午 丁未 戊申 己酉 庚戌 辛亥 壬子 癸丑 甲寅 乙卯 丙辰 丁巳 戊午 己未 庚申 辛酉 壬戌 癸亥
;
;【例】2012/1/1（辛酉）の場合
;sdim 干支, 64, 60
;干支( 0) = "甲子", "乙丑", "丙寅", "丁卯", "戊辰", "己巳", "庚午", "辛未", "壬申", "癸酉", "甲戌", "乙亥", "丙子", "丁丑", "戊寅", "己卯", "庚辰", "辛巳", "壬午", "癸未"
;干支(20) = "甲申", "乙酉", "丙戌", "丁亥", "戊子", "己丑", "庚寅", "辛卯", "壬辰", "癸巳", "甲午", "乙未", "丙申", "丁酉", "戊戌", "己亥", "庚子", "辛丑", "壬寅", "癸卯"
;干支(40) = "甲辰", "乙巳", "丙午", "丁未", "戊申", "己酉", "庚戌", "辛亥", "壬子", "癸丑", "甲寅", "乙卯", "丙辰", "丁巳", "戊午", "己未", "庚申", "辛酉", "壬戌", "癸亥"
;mes 干支( MJD2Kanshi(ConvertG2MJD(2012,1,1)) )
;
;-----------------------------------------------------------
#define global ctype MJD2Kanshi(%1) (((%1)+50) \ 60)




;-----------------------------------------------------------
;
;	現在の修正ユリウス日を取得
;
;[ Infomation ]
;	val = GetMJDToday()
;	val : 現在の修正ユリウス日
;
;[ comment ]
;現在の修正ユリウス日を取得します。
;年月日だけを取得するので結果は整数です。
;
;-----------------------------------------------------------
#defcfunc GetMJDToday
	return ConvertG2MJD(gettime(0), gettime(1), gettime(3))


;-----------------------------------------------------------
;
;	現在の修正ユリウス日（時刻）を取得
;
;[ Infomation ]
;	val = GetMJDNow()
;	val : 現在の修正ユリウス日の時刻
;
;[ comment ]
;現在の修正ユリウス日の時刻を取得します。
;時刻のみを取得します。結果は1.0未満の実数になります。
;GetMJDToday関数の結果と足し算して利用してください。
;
;-----------------------------------------------------------
#defcfunc GetMJDNow
	return ConvertTime2MJD(gettime(4), gettime(5), double(gettime(6))+double(gettime(7))/1000.0)



;===================================================================================================
#global

#endif	;__MOD_MJD__



;-------------------------------------------------------------------------------
;
;	仮実行スクリプト（デバッグ作業用）
;
;-------------------------------------------------------------------------------

;#####################################################################
;ここにはデバッグ作業用のスクリプトを記述します。
;ここを有効にするとこのファイル単独での実行が可能になります。
;
;0	：リリースモード　本体側から#includeで連結して動作させる場合です。
;1	：デバッグモード　このファイル単品で動作確認が出来ます。
#if 0
	;	ここにデバッグ用コードを記述する

	;-----------------------------
	;	グレゴリオ暦　←→　修正ユリウス日
	;-----------------------------
	;Wikipedia「ユリウス通日 4 西暦からの換算 計算例」より
	;https://ja.wikipedia.org/wiki/%E3%83%A6%E3%83%AA%E3%82%A6%E3%82%B9%E9%80%9A%E6%97%A5#.E8.A8.88.E7.AE.97.E4.BE.8B
	;紀元前4713年 1月 1日　→　-2399963
	;       200年 3月 1日　→　 -605833
	;      1582年10月15日　→　 -100840
	;      2000年 1月 1日　→　   51544
	mes "=================================="
	mes "BC 4713年 1月 1日　→　" + ConvertG2MJD(1-4713, 1, 1)
	mes "AD  200年 3月 1日　→　" + ConvertG2MJD(   200, 3, 1)
	mes "AD 1582年10月15日　→　" + ConvertG2MJD(  1582,10,15)
	mes "AD 2000年 1月 1日　→　" + ConvertG2MJD(  2000, 1, 1)
	x = -2399963 : ConvertMJD2G x, Year, Month, Day : mes strf("%8d　→　%5d年%2d月%2d日",x, Year, Month, Day)
	x =  -605833 : ConvertMJD2G x, Year, Month, Day : mes strf("%8d　→　%5d年%2d月%2d日",x, Year, Month, Day)
	x =  -100840 : ConvertMJD2G x, Year, Month, Day : mes strf("%8d　→　%5d年%2d月%2d日",x, Year, Month, Day)
	x =    51544 : ConvertMJD2G x, Year, Month, Day : mes strf("%8d　→　%5d年%2d月%2d日",x, Year, Month, Day)
	
	;-----------------------------
	;	年月日
	;-----------------------------
	;例: 2012年1月1日
	;日曜日
	;十二支は酉
	;十干は辛
	;干支紀日は辛酉
	;
	mes "=================================="
	mes "年月日から各種情報を算出"
	y = 2012
	m = 1
	d = 1
	
	;-----------------------------
	;	AD/BC
	;-----------------------------
	if y>0 {
		;	AD（西暦）
		mes "AD " + y + "年 " + m + "月 " + d + "日"
	} else {
		;	BC（紀元前）
		mes "BC " + (1-y) + "年 " + m + "月 " + d + "日"
	}
	
	;-----------------------------
	;	曜日
	;-----------------------------
	曜日 = "日", "月", "火", "水", "木", "金", "土"
	mes 曜日( MJD2Weekday(ConvertG2MJD(2012,1,1)) ) +"曜日"
	
	;-----------------------------
	;	十二支
	;-----------------------------
	十二支 = "子", "丑", "寅", "卯", "辰", "巳", "午", "未", "申", "酉", "戌", "亥"
	mes "十二支：" + 十二支( MJD2Jyunishi(ConvertG2MJD(2012,1,1)) )
	
	;-----------------------------
	;	十干
	;-----------------------------
	十干 = "甲", "乙", "丙", "丁", "戊", "己", "庚", "辛", "壬", "癸"
	mes "十干　：" + 十干( MJD2Jikkan(ConvertG2MJD(2012,1,1)) )
	
	;-----------------------------
	;	干支
	;-----------------------------
	sdim 干支, 64, 60
	干支( 0) = "甲子", "乙丑", "丙寅", "丁卯", "戊辰", "己巳", "庚午", "辛未", "壬申", "癸酉", "甲戌", "乙亥", "丙子", "丁丑", "戊寅", "己卯", "庚辰", "辛巳", "壬午", "癸未"
	干支(20) = "甲申", "乙酉", "丙戌", "丁亥", "戊子", "己丑", "庚寅", "辛卯", "壬辰", "癸巳", "甲午", "乙未", "丙申", "丁酉", "戊戌", "己亥", "庚子", "辛丑", "壬寅", "癸卯"
	干支(40) = "甲辰", "乙巳", "丙午", "丁未", "戊申", "己酉", "庚戌", "辛亥", "壬子", "癸丑", "甲寅", "乙卯", "丙辰", "丁巳", "戊午", "己未", "庚申", "辛酉", "壬戌", "癸亥"
	mes "干支　：" + 干支( MJD2Kanshi(ConvertG2MJD(2012,1,1)) )
	
	
	;-----------------------------
	;	時刻
	;-----------------------------
	mes "=================================="
	mes "時刻　→　修正ユリウス日の時刻　→　時刻"
	hh = 10
	mm = 9
	ss = 8.23
	
	tm = strf("%02d:%02d:%06.03f", hh,mm,ss)
	tm+= " → "
	tm+= strf("%0.5f", ConvertTime2MJD(hh, mm, ss))
	tm+= " → "
	ConvertMJD2Time ConvertTime2MJD(hh, mm, ss), h,m,s
	tm+= strf("%02d:%02d:%06.03f", h, m, s)
	mes tm

	;-----------------------------
	;	現在日時
	;-----------------------------
	mes "=================================="
	x = GetMJDToday()
	ConvertMJD2G x, Year, Month, Day
	mes strf("%8d　＝　%5d年%2d月%2d日", x, Year, Month, Day)

	t = GetMJDNow()
	ConvertMJD2Time t, h,m,s
	mes strf("%f　＝　%02d:%02d:%06.03f", t, h, m, s)


#endif
;#####################################################################
